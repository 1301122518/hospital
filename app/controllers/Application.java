package controllers;

import java.util.Set;
import java.util.Iterator;

import models.Patient;
import models.PatientRepository;
import models.Department;
import play.mvc.*;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;

/**
 * The main set of web services.
 */
@Named
@Singleton
public class Application extends Controller {

    private final PatientRepository patientRepository;

    // We are using constructor injection to receive a repository to support our desire for immutability.
    @Inject
    public Application(final PatientRepository patientRepository) {
        this.patientRepository = patientRepository;
    }

    public Result index() {

        // For fun we save a new person and then find that one we've just saved. The id is auto generated by
        // the db so we know that we're round-tripping to the db and back in order to demonstrate something
        // interesting. Spring Data takes care of transactional concerns and the following code is all
        // executed on the same thread (a requirement of the JPA entity manager).

        final Patient patient = new Patient();
        patient.id = 1L;
        patient.name = "Ling";

//        final Patient savedPatient = patientRepository.save(patient);

        final Patient retrievedPatient = patientRepository.findOne(patient.id);
        final Iterator departments = retrievedPatient.departments.iterator();

        Department department = (Department) departments.next();
        // Deliver the index page with a message showing the id that was generated.

        return ok(views.html.index.render("Found id: " + retrievedPatient.id + retrievedPatient.name + department.name + "  位置在:  "+ department.address + " of person/people" ));
    }
}
